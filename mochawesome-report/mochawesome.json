{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-22T21:22:50.350Z",
    "end": "2022-09-22T21:22:57.244Z",
    "duration": 6894,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1abc39f5-3293-4355-9b8f-8e8b3f333b11",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c56c6bd-70dd-436e-98c9-35a6c85ab1ec",
          "title": "Add todo tests",
          "fullFile": "D:\\Repo\\javascirpt_mocha_selenium\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add a todo application",
              "fullTitle": "Add todo tests successfully add a todo application",
              "timedOut": null,
              "duration": 4111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch the browser \n        let driver = await new Builder().forBrowser(\"firefox\").build()\n        //naviate to our application\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n        //add a todo \n        await driver.findElement(By.id(\"sampletodotext\"))\n            .sendKeys(\"Learn Selenium\", Key.RETURN);\n        //asserts\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\"))\n            .getText()\n            .then(function (value) {\n                return value;\n            });\n        //assert using chai should\n        todoText.should.equal((\"Learn Selenium\"));\n        //close the browser\n        await driver.quit();",
              "err": {},
              "uuid": "f9c4beed-62b7-4784-9393-4f0993b4df4c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9c4beed-62b7-4784-9393-4f0993b4df4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4111,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "f5e0557f-2126-4bfa-82c4-3b16a28b3e32",
          "title": "Add another todo tests",
          "fullFile": "D:\\Repo\\javascirpt_mocha_selenium\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add another todo application",
              "fullTitle": "Add another todo tests successfully add another todo application",
              "timedOut": null,
              "duration": 4162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch the browser \n        let driver = await new Builder().forBrowser(\"firefox\").build()\n        //navigate to our application\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n        //add a todo \n        await driver.findElement(By.id(\"sampletodotext\"))\n            .sendKeys(\"Learn Python\", Key.RETURN);\n        //asserts\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\"))\n            .getText()\n            .then(function (value) {\n                return value;\n            });\n        //assert using chai should\n        todoText.should.equal((\"Learn Python\"));\n        //close the browser\n        await driver.quit();",
              "err": {},
              "uuid": "61e4af4c-50ac-4d09-a010-826a53843ad9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "adding a new test for reporting",
              "fullTitle": "Add another todo tests adding a new test for reporting",
              "timedOut": null,
              "duration": 2332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//Launch the browser \n        let driver = await new Builder().forBrowser(\"firefox\").build()\n        //navigate to our application\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n        //add a todo \n        await driver.findElement(By.id(\"sampletodotext\"))\n            .sendKeys(\"Learn Python\", Key.RETURN);\n        //asserts\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\"))\n            .getText()\n            .then(function (value) {\n                return value;\n            });\n        //assert using chai should\n        todoText.should.equal((\"Learn C#\"));\n        //close the browser\n        await driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Python' to equal 'Learn C#'",
                "estack": "AssertionError: expected 'Learn Python' to equal 'Learn C#'\n    at Context.<anonymous> (test\\secondTest.js:59:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Learn Python\n+ Learn C#\n"
              },
              "uuid": "579d361d-635e-4b00-bbdf-a7faf2928920",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61e4af4c-50ac-4d09-a010-826a53843ad9"
          ],
          "failures": [
            "579d361d-635e-4b00-bbdf-a7faf2928920"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6494,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}